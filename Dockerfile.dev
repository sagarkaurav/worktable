FROM python:3.9.1

ARG USERNAME=jarvis
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ARG ALLOW_SUDO=false

RUN curl -sL https://deb.nodesource.com/setup_14.x |  bash - \
    && apt install -y nodejs
# Create the user
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME

RUN groupmod --gid $USER_GID $USERNAME \
    && usermod --uid $USER_UID --gid $USER_GID $USERNAME \
    && chown -R $USER_UID:$USER_GID /home/$USERNAME 

RUN if [ "$ALLOW_SUDO" = "true" ]; then \
    apt-get update \
        && apt-get install -y sudo \
        && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
        && chmod 0440 /etc/sudoers.d/$USERNAME\
    ; fi

RUN mkdir -p /usr/src/app && chown -R $USER_UID:$USER_GID /usr/src/app

ENV PATH "$PATH:/home/$USERNAME/.local/bin"

USER $USERNAME

WORKDIR /usr/src/app

RUN pip install pipenv==2020.11.15

COPY --chown=$USERNAME:$USERNAME Pipfile Pipfile

COPY --chown=$USERNAME:$USERNAME Pipfile.lock Pipfile.lock

RUN pipenv lock --requirements > requirements.txt && pip install --no-cache-dir -r requirements.txt

# Copy current app to image it contains flask app package
COPY  --chown=$USERNAME:$USERNAME . /usr/src/app

# Set flask_app and flask_debug environment
ENV FLASK_APP=run_app.py
ENV FLASK_DEBUG=0
ENV FLASK_ENV=production

# Expose the flask default port 5000
EXPOSE 5000

# Start gunicorn server
CMD [ "gunicorn", "--access-logfile=-", "-b", "0.0.0.0:5000", "run_app:app" ]